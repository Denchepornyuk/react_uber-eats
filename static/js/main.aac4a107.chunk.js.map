{"version":3,"sources":["components/Input/Input.js","components/Header/Header.js","store/actions.js","store/selectors.js","components/RestaurantCard/RestaurantCard.js","components/RestaurantsListPage/RestaurantsListPage.js","components/RestaurantsListPage/index.js","api/restaurants.js","App.js","store/index.js","index.js"],"names":["Input","_ref","iconUrl","name","value","onChange","type","placeholder","react_default","a","createElement","className","src","alt","defaultProps","Header","components_Input_Input","ACTIONS_TYPES","selectRestaurantsList","createSelector","state","restaurantsListData","feedItems","storesMap","map","_ref2","uuid","RestaurantCard","imageUrl","title","categories","deliveryTime","join","RestourantsListPage","restaurantsData","loadRestaurants","useEffect","heroImageUrl","etaRange","components_RestaurantCard_RestaurantCard","key","text","mapDispatchToProps","dispatch","fetch","then","response","json","data","restaurants","connect","RestaurantsListPage","App","components_Header_Header","components_RestaurantsListPage","initialState","store","createStore","arguments","length","undefined","action","Object","objectSpread2","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.aac4a107.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({\n  iconUrl,\n  name,\n  value,\n  onChange,\n  type,\n  placeholder,\n}) => (\n  <div className=\"control\">\n    {!!iconUrl && (\n      <img\n        src={iconUrl}\n        alt={placeholder}\n        className=\"contor__icon\"\n      />\n    )}\n    <input\n      type={type}\n      name={name}\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n      className=\"contor__input\"\n    />\n  </div>\n);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  iconUrl: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nInput.defaultProps = {\n  iconUrl: '',\n  type: 'text',\n  placeholder: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport Input from '../Input/Input';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"content\">\n      <img src=\"./images/logo.svg\" alt=\"Uber Eats\" />\n\n      <div className=\"header__delivery-info\">\n        <Input\n          name=\"address\"\n          value=\"\"\n          onChange={() => {}}\n          placeholder=\"Address\"\n          iconUrl=\"./images/place.svg\"\n        />\n        <Input\n          name=\"time\"\n          value=\"\"\n          onChange={() => {}}\n          placeholder=\"time\"\n        />\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import { getRestaurantsFromServer } from '../api/restaurants';\n\nexport const ACTIONS_TYPES = {\n  SAVE_RESTAURANTS: 'SAVE_RESTAURANTS',\n};\n\nconst getRestaurants = restaurants => ({\n  type: ACTIONS_TYPES.SAVE_RESTAURANTS,\n  restaurants,\n});\n\nexport const loadRestaurants = () => (dispatch) => {\n  getRestaurantsFromServer()\n    .then(({ data }) => dispatch(getRestaurants(data)));\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData }) => {\n    if (!restaurantsListData) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurantsListData;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  }\n);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst RestaurantCard = ({\n  imageUrl,\n  title,\n  categories,\n  deliveryTime,\n  uuid,\n}) => (\n  <div className=\"restaurant-card\">\n    <img src={imageUrl} alt={title} className=\"restaurant-card__img\" />\n    <h2 className=\"restaurant-card__title\">{title}</h2>\n    <div className=\"restaurant-card__categories\">\n      {categories.join(' â€¢ ')}\n    </div>\n    <div className=\"restaurant-card__time\">\n      {deliveryTime}\n    </div>\n  </div>\n);\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string),\n  deliveryTime: PropTypes.string,\n  uuid: PropTypes.string.isRequired,\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  deliveryTime: '',\n};\n\nexport default RestaurantCard;\n","import React, { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport RestaurantCard from '../RestaurantCard/RestaurantCard';\n\nconst RestourantsListPage = ({ restaurantsData, loadRestaurants }) => {\n  useEffect(() => loadRestaurants(), []);\n\n  return (\n    <div className=\"restaurant-list\">\n      {restaurantsData.map(({\n        uuid,\n        title,\n        heroImageUrl,\n        categories,\n        etaRange,\n      }) => (\n        <RestaurantCard\n          key={uuid}\n          uuid={uuid}\n          title={title}\n          imageUrl={heroImageUrl}\n          categories={categories}\n          deliveryTime={etaRange.text}\n        />\n      ))}\n    </div>\n  );\n};\n\nRestourantsListPage.propTypes = {\n  restaurantsData: PropTypes.arrayOf(PropTypes.shape({})),\n  loadRestaurants: PropTypes.func.isRequired,\n};\n\nRestourantsListPage.defaultProps = {\n  restaurantsData: [],\n};\n\nexport default RestourantsListPage;\n","import { connect } from 'react-redux';\nimport { loadRestaurants } from '../../store/actions';\nimport { selectRestaurantsList } from '../../store/selectors';\nimport RestaurantsListPage from './RestaurantsListPage';\n\nconst mapStateToProps = state => ({\n  restaurantsData: selectRestaurantsList(state),\n});\n\nconst mapDispatchToProps = {\n  loadRestaurants,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RestaurantsListPage);\n","const URL_API = 'https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants';\n\nexport const getRestaurantsFromServer = () => (\n  fetch(URL_API).then(response => response.json())\n);\n","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport RestaurantsListPage from './components/RestaurantsListPage/index';\n\nconst App = () => (\n  <div className=\"page\">\n    <Header />\n    <main className=\"content\">\n      <RestaurantsListPage />\n    </main>\n    <footer>FOOTER</footer>\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTIONS_TYPES } from './actions';\n\nconst initialState = {\n  restaurantsListData: null,\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS_TYPES.SAVE_RESTAURANTS:\n      return {\n        ...state,\n        restaurantsListData: action.restaurants,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}